(function(name, context, definition) {
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = definition()
    } else if (typeof define === 'function' && define.amd) {
        define(definition)
    } else {
        context[name] = definition()
    }
})('adwojs', this, function() {
    'use strict';
    var adwojs = function(options) {
        var xhtp = null,
            req = "",
            url = req + "?callback=adwo";
        this._fa = 0, this._pw = 0, this._ph = 0, this._dw = 320, this._dh = 50, this._af = true;
        this.request = function(arg) {
            this.createxhr();
            xhtp.onreadystatechange = this.callhandle;
            xhtp.open("POST", url, true);
            xhtp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
            xhtp.send(arg)
        }, this.createxhr = function() {
            if (window.ActiveXObject) {
                xhtp = new ActiveXObject("Microsoft.XMLHTTP")
            } else if (window.XMLHttpRequest) {
                xhtp = new XMLHttpRequest()
            }
        }, this.callhandle = function() {
            if (xhtp.readyState == 4) {
                if (xhtp.status == 200) {
                    var data = eval("(" + xhtp.responseText + ")");
                    if (data.resultcode == 1) {
                        data.ts && adwojs.ut.set_cookie("mz_ts", data.ts, 365, "/");
                        data.md && adwojs.ut.set_cookie("mz_md", data.md, 365, "/");
                        var _f = document.createElement("iframe");
                        _f.id = "ifr";
                        _f.name = "ifr";
                        _f.setAttribute("frameborder", "0");
                        _f.scrolling = "no";
                        _f.height = '100';
                        _f.width = '100%';
                        var d = document.getElementById(options.eid);
                        (d) ? d.appendChild(_f): document.body.appendChild(_f);
                        var iframe = window.frames['ifr'];
                        iframe.document.open();
                        iframe.document.write(data.ad.content);
                        iframe.document.close()
                    }
                }
            }
        }, this.store = function(n, v) {
            var c = "";
            if (adwojs.ut.get_cookie(n) != null) {
                admuid = adwojs.ut.get_cookie('mz_id')
            } else {
                admuid && adwojs.ut.set_cookie("mz_id", admuid, 365, "/")
            }
        }, this.blnflash = function() {
            try {
                if (navigator.plugins) {
                    for (var i = 0; i < navigator.plugins.length; i++) {
                        if (navigator.plugins[i].name.toLowerCase().indexOf("shockwave flash") != -1) {
                            this._fa = 1
                        }
                    }
                }
            } catch (e) {
                this._fa = -1
            }
        }, this.getwandh = function() {
            if (window.innerWidth) this._pw = window.innerWidth;
            else if ((document.body) && (document.body.clientWidth)) this._pw = document.body.clientWidth;
            if (window.innerHeight) this._ph = window.innerHeight;
            else if ((document.body) && (document.body.clientHeight)) this._ph = document.body.clientHeight;
            if (document.documentElement && document.documentElement.clientHeight && document.documentElement.clientWidth) {
                this._pw = document.documentElement.clientWidth;
                this._ph = document.documentElement.clientHeight
            }
        }, this.userId = function() {
            var keys = [];
            keys.push(navigator.userAgent);
            keys.push(navigator.language);
            keys.push(screen.colorDepth);
            keys.push(typeof(window.openDatabase));
            keys.push(navigator.cpuClass);
            keys.push(navigator.platform);
            keys.push(navigator.doNotTrack);
            return keys.join('_')
        };
        if (typeof options == 'object') {
            this.eid = options.eid;
            var u = navigator.userAgent;
            if ((!!u.match(/AppleWebKit.*Mobile.*/)) && (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1)) {
                this.pid = options.aid;
                this.dn = 'Android'
            }
            if ((!!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/)) && (u.indexOf('iPhone') > -1 || u.indexOf('iPad') > -1)) {
                this.pid = options.pid;
                this.dn = (u.indexOf('iPad') > -1) ? 'iPad' : 'iPhone'
            }
            this.bt = options.bt;
            this.width = options.width;
            this.height = options.height;
            this.af = options.af
        }
    };
    adwojs.ut = {
        get_cookie: function(b) {
            var g = document.cookie.split(";");
            var c = "";
            var e = "";
            var f = "";
            var d = false;
            var a = "";
            for (a = 0; a < g.length; a++) {
                c = g[a].split("=");
                e = c[0].replace(/^\s+|\s+$/g, "");
                if (e == b) {
                    d = true;
                    if (c.length > 1) {
                        f = unescape(c[1].replace(/^\s+|\s+$/g, ""))
                    }
                    return f;
                    break
                }
                c = null;
                e = ""
            }
            if (!d) {
                return null
            }
        },
        set_cookie: function(c, e, a, h, d, g) {
            var b = new Date();
            b.setTime(b.getTime());
            if (a) {
                a = a * 1000 * 60 * 60 * 24
            }
            var f = new Date(b.getTime() + (a));
            document.cookie = c + "=" + escape(e) + ((a) ? ";expires=" + f.toGMTString() : "") + ((h) ? ";path=" + h : "") + ((d) ? ";domain=" + d : "") + ((g) ? ";secure" : "")
        },
        del_cookie: function(a, c, b) {
            if (_mz_get_cookie(a)) {
                document.cookie = a + "=" + ((c) ? ";path=" + c : "") + ((b) ? ";domain=" + b : "") + ";expires=Thu, 01-Jan-1970 00:00:01 GMT"
            }
        }
    };
    adwojs.prototype = {
        send: function() {
            this.blnflash();
            this.getwandh();
            if (this.width != 'undefined' && parseInt(this.width) > 0) this._dw = this.width;
            if (this.height != 'undefined' && parseInt(this.height) > 0) this._dh = this.height;
            if (this.af != 'undefined' && this.af != null && typeof this.af == 'boolean') this._af = this.af;
            var timestamp = Date.parse(new Date());
            var admuid = (adwojs.ut.get_cookie('mz_id') != null) ? adwojs.ut.get_cookie('mz_id') : this.mumtohash(this.userId() + timestamp, 31);
            admuid && adwojs.ut.set_cookie("mz_id", admuid, 365, "/");
            var sts = (adwojs.ut.get_cookie('mz_ts') != null) ? adwojs.ut.get_cookie('mz_ts') : 0;
            var smd = (adwojs.ut.get_cookie('mz_md') != null) ? adwojs.ut.get_cookie('mz_md') : "";
            var scount = (adwojs.ut.get_cookie('mz_scount') != null) ? parseInt(adwojs.ut.get_cookie('mz_scount')) + 1 : 0;
            adwojs.ut.set_cookie("mz_scount", scount, 365, "/");
            var urlname = encodeURIComponent(window.location.href);
            var paw = (window.screen.availWidth != 'undefined') ? window.screen.availWidth : 0;
            var pah = (window.screen.availHeight != 'underfined') ? window.screen.availHeight : 0;
            if (this.pid == null || this.pid == 'undefined') return;
            var sendurl = "data={pid:'" + this.pid + "',muid:'" + admuid + "',sv:16,sw:" + this._dw + ",sh:" + this._dh + ",url:'" + encodeURIComponent(urlname) + "',pw:" + this._pw + ",ph:" + this._ph + ",ts:" + timestamp + ",paw:" + paw + ",pah:" + pah + ",bt:" + this.bt + ",af:" + this._af + ",flash:" + this._fa + ",dn:'" + this.dn + "',scount:" + scount + ",sts:" + sts + ",smd:'" + smd + "'}";
            this.request(sendurl)
        },
        mumtohash: function(key, seed) {
            var remainder, bytes, h1, h1b, c1, c2, k1, i;
            remainder = key.length & 3;
            bytes = key.length - remainder;
            h1 = seed;
            c1 = 0xcc9e2d51;
            c2 = 0x1b873593;
            i = 0;
            while (i < bytes) {
                k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(++i) & 0xff) << 8) | ((key.charCodeAt(++i) & 0xff) << 16) | ((key.charCodeAt(++i) & 0xff) << 24);
                ++i;
                k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;
                k1 = (k1 << 15) | (k1 >>> 17);
                k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;
                h1 ^= k1;
                h1 = (h1 << 13) | (h1 >>> 19);
                h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;
                h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16))
            }
            k1 = 0;
            switch (remainder) {
                case 3:
                    k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;
                case 2:
                    k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;
                case 1:
                    k1 ^= (key.charCodeAt(i) & 0xff);
                    k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;
                    k1 = (k1 << 15) | (k1 >>> 17);
                    k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;
                    h1 ^= k1
            }
            h1 ^= key.length;
            h1 ^= h1 >>> 16;
            h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;
            h1 ^= h1 >>> 13;
            h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;
            h1 ^= h1 >>> 16;
            return h1 >>> 0
        }
    };
    return adwojs
});